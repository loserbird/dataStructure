package weightgraph;

public class MininumTree {
	
	//求最小生成树一般有两种方法：Prime算法和Kruskal算法。这两种算法东基于切分定理
	//
	//求最小生成树：（默认是连同的）包含所有节点，寻找v-1条边,权值最小，针对最小生成树
	//切分：把图中的节点分为两部分叫做图的一个切分
	//横切边：一个边的两个节点分别属于切分不同的两部分
	//切分定理：给定任意切分，横切边中权值最小的边必然是属于最小生成树的
	
	
	//Prime算法：一个个遍历节点
	//1. 将与当前节点相邻的所有边都放入一个最小堆中
	//2. 选择堆最小的一条边
	//3. 若这条边的另外一个节点已经被放入最小生成树中，则跳到步骤2.否则将另外一个节点加入到生成树中，重复步骤1.
	//4. 知道堆中没有边，循环结束
	
	//可以使用索引堆来优化。。在比较的过程中把不可能是最小生成树的边扔掉（通过不断更新堆中的值）。堆中只存储V条边。每次比较只留下最小的。
	
	//Kruskal算法:
	//先把所有的变排序，然后逐条把边加入生成树中，看看是否会形成环，如果会，则拒绝加入。直到v-1条边结束
}
